@using EPiServer.Editor
@using Global = AlloyAngularJS.Global
@model PageViewModel<ProductPage>

@{ Layout = "~/Views/Shared/Layouts/_TwoPlusOne.cshtml"; }

<script>
    window.pageModel = {
        contentLink: "@Model.CurrentPage.ContentLink",
        pageImage: "@Model.CurrentPage.PageImage"
    };
</script>

<h1 @Html.EditAttributes(x => x.CurrentPage.PageName)>@Model.CurrentPage.PageName</h1>
<p class="introduction" @Html.EditAttributes(x => x.CurrentPage.MetaDescription)>@Model.CurrentPage.MetaDescription</p>
<div class="row">
    <div class="span8 clearfix" @Html.EditAttributes(x => x.CurrentPage.MainBody)>
        @Html.DisplayFor(m => m.CurrentPage.MainBody)
    </div>
</div>
@Html.PropertyFor(x => x.CurrentPage.MainContentArea, new { CssClass = "row", Tag = Global.ContentAreaTags.TwoThirdsWidth })

@section RelatedContent
{
<div ng-controller="productPageRelatedContentController as ctrl">

    <!-- This the element we're going to update through Angular. Notice the two attributes! If the property type was a string you'd want to add `data-epi-property-edittype="floating"`. -->
    <div data-epi-property-name="PageImage" data-epi-property-render="none">
        <img ng-src="{{ctrl.pageImageUrl}}" alt="{{ctrl.pageImageName}}"/>
        @if (PageEditing.PageIsInEditMode)
        {
            <pre>Drag an image here to test OPE with Angular!<br/>Image name: {{ctrl.pageImageName}}</pre>
        }
    </div>

    <div class="block colorBox @string.Join(" ", @Model.CurrentPage.GetThemeCssClassNames())">
        <h2 @Html.EditAttributes(x => x.CurrentPage.PageName)>@Model.CurrentPage.PageName</h2>
        @Html.PropertyFor(x => x.CurrentPage.UniqueSellingPoints)
    </div>

    @Html.PropertyFor(x => x.CurrentPage.RelatedContentArea, new { CssClass = "row", Tag = Global.ContentAreaTags.OneThirdWidth })
</div>
}
